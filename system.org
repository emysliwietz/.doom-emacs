#+title: System
* Org Protocol
** System
*** Linux
Set up emacsclient as org-protocol scheme-handler
#+begin_src emacs-lisp
(mkdir "~/.local/share/applications/" t)
#+end_src
#+begin_src desktop :tangle ~/.local/share/applications/org-protocol.desktop
[Desktop Entry]
Name=org-protocol
Comment=Intercept calls from emacsclient to trigger custom actions
Categories=Other;
Keywords=org-protocol;
Icon=emacs
Type=Application
Exec=emacsclient -- %u
Terminal=false
StartupWMClass=Emacs
MimeType=x-scheme-handler/org-protocol;
#+end_src
Update MIME cache
#+begin_src bash
update-desktop-database ~/.local/share/applications/
#+end_src
#+RESULTS:

*** Windows
#+begin_src emacs-lisp :tangle yes
(mkdir "./ext/org-protocol/" t)
#+end_src
#+begin_src conf :tangle ./ext/org-protocol/org-protocol.reg
REGEDIT4

[HKEY_CLASSES_ROOT\org-protocol]
@="URL:Org Protocol"
"URL Protocol"=""
[HKEY_CLASSES_ROOT\org-protocol\shell]
[HKEY_CLASSES_ROOT\org-protocol\shell\open]
[HKEY_CLASSES_ROOT\org-protocol\shell\open\command]
@="\"C:\\Windows\\System32\\wsl.exe\" emacsclient \"%1\""
#+end_src
*** JS Bookmarks
Replace =capture= subprotocol with =store-link= or =youtube-dl=
#+begin_src js :tangle .ext/org-protocol/capture-bookmark.js
javascript:location.href='org-protocol://capture?' +
      new URLSearchParams({
            template: 'x', url: window.location.href,
            title: document.title, body: window.getSelection()});
#+end_src

#+RESULTS:

** youtube-dl handler
#+begin_src emacs-lisp
(add-to-list 'org-protocol-protocol-alist
             '("Download like with youtube-dl"
               :protocol "youtube-dl"
               :function youtube-dl-protocol-handler))

(defun youtube-dl-protocol-handler (data)
  "Add url to youtube-dl download queue."
  (let ((url (plist-get data :url))
        (title (plist-get data :title)))
    (unless (string= title "about:blank")
      (youtube-dl
       (plist-get data :url)
       :title (plist-get data :title))))
  nil)
#+end_src
